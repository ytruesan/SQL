# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.

#First, I determined the Top 10 songs and the artists that sing them by popularity.
SELECT track_name, artist_name
    FROM BIT_DB.Spotifydata
    ORDER BY popularity DESC
    LIMIT 10;

#Then I determined the Top 10 artists by their average popularity and determined their danceability
SELECT artist_name, AVG(popularity), AVG(danceability)
    FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    ORDER BY AVG(popularity) DESC
    LIMIT 10;
    
#Then I determined the total tracks each artist had in the Top 50 and arranged by the artist with the most tracks to those with the least. 
SELECT artist_name, COUNT(track_name) AS total_tracks
    FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    ORDER BY total_tracks DESC;

#Then I determined the artists with the least energetic songs
SELECT artist_name
    FROM BIT_DB.Spotifydata
    WHERE energy<0.5
    GROUP BY artist_name;

#Then I determined the duration in minutes of each song in the Top 50
SELECT track_name, artist_name, (duration_ms/60000) AS minutes
    FROM BIT_DB.Spotifydata
    ORDER BY minutes DESC;
    
#Lastly, I determined the duration in minutes of the TOP 10 songs 
SELECT track_name, (duration_ms/60000) AS minutes
    FROM BIT_DB.Spotifydata
    ORDER BY popularity DESC
    LIMIT 10; 
